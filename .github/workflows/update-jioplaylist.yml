name: Update Cookie from Any Channel in Worker JSON

on:
  schedule:
    - cron: '0 */6 * * *'   # Every 6 hours
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Requests
        run: pip install requests

      - name: Get Cookie from Worker JSON & Update Jiotv.json
        run: |
          python - <<'PY'
          import json
          import requests
          import os
          from urllib.parse import urlparse, parse_qs

          WORKER_URL = "https://jo-json.vodep39240327.workers.dev/"
          PLAYLIST_FILE = "Jiotv.json"
          TIMEOUT = 30
          MAX_RETRIES = 3

          def get_cookie_from_worker():
              print(f"Fetching JSON from: {WORKER_URL}")
              for attempt in range(1, MAX_RETRIES + 1):
                  try:
                      print(f"  â†’ Attempt {attempt}...")
                      response = requests.get(WORKER_URL, timeout=TIMEOUT)
                      response.raise_for_status()
                      data = response.json()
                      if not isinstance(data, dict) or len(data) == 0:
                          print("No channels in JSON.")
                          continue

                      first_channel = next(iter(data.values()))
                      if 'url' not in first_channel:
                          print("No 'url' in channel data.")
                          continue

                      channel_url = first_channel['url']
                      print(f"Using channel URL: {channel_url[:100]}...")

                      parsed = urlparse(channel_url)
                      params = parse_qs(parsed.query)
                      hdnea = params.get('__hdnea__', [])
                      if hdnea:
                          cookie = f"__hdnea__={hdnea[0]}"
                          print(f"EXTRACTED COOKIE: {cookie}")
                          return cookie
                      else:
                          print("No __hdnea__ in channel URL.")
                  except Exception as e:
                      print(f"  Failed: {e}")
                      if attempt < MAX_RETRIES:
                          import time; time.sleep(5)
              return None

          # Load playlist
          if not os.path.exists(PLAYLIST_FILE):
              print(f"{PLAYLIST_FILE} not found! Create it first.")
              exit(1)

          try:
              with open(PLAYLIST_FILE, 'r', encoding='utf-8') as f:
                  playlist = json.load(f)
          except Exception as e:
              print(f"Error reading playlist: {e}")
              exit(1)

          if not isinstance(playlist, list) or len(playlist) == 0:
              print("Playlist is empty!")
              exit(1)

          # Get fresh cookie
          new_cookie = get_cookie_from_worker()
          if not new_cookie:
              print("Failed to extract cookie.")
              exit(1)

          # Update ALL channels
          updated = False
          for i, ch in enumerate(playlist):
              old = ch.get("cookie", "")
              if old != new_cookie:
                  ch["cookie"] = new_cookie
                  name = ch.get("name", "Unknown")
                  print(f"Updated [{i+1}] {name}")
                  updated = True

          if not updated:
              print("No changes needed.")
              exit(0)

          # Save updated file
          with open(PLAYLIST_FILE, 'w', encoding='utf-8') as f:
              json.dump(playlist, f, indent=2, ensure_ascii=False, separators=(',', ': '))
          print(f"{PLAYLIST_FILE} updated with {len(playlist)} channels!")
          PY

      - name: Commit & Push if Changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Jiotv.json

          # Check if there are staged changes
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "Auto: Updated cookie from worker JSON"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
